{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-05-25T13:31:17.587680Z", "invocation_id": "db5cd272-4160-4cac-a067-695198ee09ca", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:47.995140Z", "completed_at": "2025-05-25T13:30:48.069091Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:48.069644Z", "completed_at": "2025-05-25T13:30:48.292551Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3145561218261719, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.stg_cat_respuesta_bancos", "compiled": true, "compiled_code": "-- stg_cat_respuesta_bancos.sql\n\nselect * from read_csv_auto('data/CatRespuestaBancos.csv', HEADER=TRUE)", "relation_name": "\"credifiel\".\"analytics\".\"stg_cat_respuesta_bancos\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:47.985776Z", "completed_at": "2025-05-25T13:30:48.009974Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:48.041314Z", "completed_at": "2025-05-25T13:30:48.299104Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3321833610534668, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.stg_cat_banco", "compiled": true, "compiled_code": "\n\nselect *\nfrom read_csv_auto('data/CatBanco.csv', HEADER=TRUE)", "relation_name": "\"credifiel\".\"analytics\".\"stg_cat_banco\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:47.968644Z", "completed_at": "2025-05-25T13:30:47.990725Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:47.999394Z", "completed_at": "2025-05-25T13:30:48.319138Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3671846389770508, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.stg_cat_emisora", "compiled": true, "compiled_code": "\n\nselect *\nfrom read_csv_auto('data/CatEmisora.csv', HEADER=TRUE)", "relation_name": "\"credifiel\".\"analytics\".\"stg_cat_emisora\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:47.991350Z", "completed_at": "2025-05-25T13:30:48.046628Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:48.047212Z", "completed_at": "2025-05-25T13:30:48.331917Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3555948734283447, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.stg_lista_cobro", "compiled": true, "compiled_code": "-- stg_lista_cobro.sql\n\nselect * from read_csv_auto('data/ListaCobro.csv', HEADER=TRUE)", "relation_name": "\"credifiel\".\"analytics\".\"stg_lista_cobro\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:48.308316Z", "completed_at": "2025-05-25T13:30:48.317351Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:48.320336Z", "completed_at": "2025-05-25T13:30:48.752609Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4696059226989746, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.stg_lista_cobro_detalle_2022", "compiled": true, "compiled_code": "-- stg_lista_cobro_detalle_2022.sql\n\nselect * from read_csv_auto('data/ListaCobroDetalle2022.csv', HEADER=TRUE)", "relation_name": "\"credifiel\".\"analytics\".\"stg_lista_cobro_detalle_2022\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:48.782050Z", "completed_at": "2025-05-25T13:30:48.787659Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:48.788421Z", "completed_at": "2025-05-25T13:30:48.870276Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.10358667373657227, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.stg_lista_cobro_emisora", "compiled": true, "compiled_code": "-- stg_lista_cobro_emisora.sql\n\nselect * from read_csv_auto('data/ListaCobroEmisora.csv', HEADER=TRUE)", "relation_name": "\"credifiel\".\"analytics\".\"stg_lista_cobro_emisora\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:48.313578Z", "completed_at": "2025-05-25T13:30:48.319613Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:48.323783Z", "completed_at": "2025-05-25T13:30:48.990773Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.70522141456604, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.stg_lista_cobro_detalle_2023", "compiled": true, "compiled_code": "-- stg_lista_cobro_detalle_2023.sql\n\nselect * from read_csv_auto('data/ListaCobroDetalle2023.csv', HEADER=TRUE)", "relation_name": "\"credifiel\".\"analytics\".\"stg_lista_cobro_detalle_2023\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:48.890598Z", "completed_at": "2025-05-25T13:30:48.894920Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:48.895623Z", "completed_at": "2025-05-25T13:30:48.998593Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.1270771026611328, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.stg_tabla_maestra_completa", "compiled": true, "compiled_code": "\n\nselect *\nfrom read_csv_auto('data/tabla_maestra_completa.csv', HEADER=TRUE)", "relation_name": "\"credifiel\".\"analytics\".\"stg_tabla_maestra_completa\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:48.350621Z", "completed_at": "2025-05-25T13:30:48.358447Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:48.358995Z", "completed_at": "2025-05-25T13:30:49.306430Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.9790089130401611, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.stg_lista_cobro_detalle_2025", "compiled": true, "compiled_code": "-- stg_lista_cobro_detalle_2025.sql\n\nselect * from read_csv_auto('data/ListaCobroDetalle2025.csv', HEADER=TRUE)", "relation_name": "\"credifiel\".\"analytics\".\"stg_lista_cobro_detalle_2025\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:48.346065Z", "completed_at": "2025-05-25T13:30:48.353393Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:48.353908Z", "completed_at": "2025-05-25T13:30:49.456406Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.1311986446380615, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.stg_lista_cobro_detalle_2024", "compiled": true, "compiled_code": "-- stg_lista_cobro_detalle_2024.sql\n\nselect * from read_csv_auto('data/ListaCobroDetalle2024.csv', HEADER=TRUE)", "relation_name": "\"credifiel\".\"analytics\".\"stg_lista_cobro_detalle_2024\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:49.477757Z", "completed_at": "2025-05-25T13:30:49.482640Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:49.483103Z", "completed_at": "2025-05-25T13:30:51.975360Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.5302627086639404, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.int_cobros_consolidados", "compiled": true, "compiled_code": "-- Modelo intermedio que consolida todos los datos de cobro de diferentes a\u00f1os\n-- int_cobros_consolidados.sql\n\n\n\nWITH cobros_2022 AS (\n    SELECT\n        idListaCobro,\n        idCredito,\n        consecutivoCobro,\n        idBanco,\n        montoExigible,\n        montoCobrar,\n        montoCobrado,\n        fechaCobroBanco,\n        idRespuestaBanco,\n        '2022' AS anio_origen\n    FROM \"credifiel\".\"analytics\".\"stg_lista_cobro_detalle_2022\"\n),\n\ncobros_2023 AS (\n    SELECT\n        idListaCobro,\n        idCredito,\n        consecutivoCobro,\n        idBanco,\n        montoExigible,\n        montoCobrar,\n        montoCobrado,\n        fechaCobroBanco,\n        idRespuestaBanco,\n        '2023' AS anio_origen\n    FROM \"credifiel\".\"analytics\".\"stg_lista_cobro_detalle_2023\"\n),\n\ncobros_2024 AS (\n    SELECT\n        idListaCobro,\n        idCredito,\n        consecutivoCobro,\n        idBanco,\n        montoExigible,\n        montoCobrar,\n        montoCobrado,\n        fechaCobroBanco,\n        idRespuestaBanco,\n        '2024' AS anio_origen\n    FROM \"credifiel\".\"analytics\".\"stg_lista_cobro_detalle_2024\"\n),\n\ncobros_2025 AS (\n    SELECT\n        idListaCobro,\n        idCredito,\n        consecutivoCobro,\n        idBanco,\n        montoExigible,\n        montoCobrar,\n        montoCobrado,\n        fechaCobroBanco,\n        idRespuestaBanco,\n        '2025' AS anio_origen\n    FROM \"credifiel\".\"analytics\".\"stg_lista_cobro_detalle_2025\"\n)\n\nSELECT * FROM cobros_2022\nUNION ALL\nSELECT * FROM cobros_2023\nUNION ALL\nSELECT * FROM cobros_2024\nUNION ALL\nSELECT * FROM cobros_2025", "relation_name": "\"credifiel\".\"analytics\".\"int_cobros_consolidados\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:52.010925Z", "completed_at": "2025-05-25T13:30:52.014775Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:52.015154Z", "completed_at": "2025-05-25T13:30:55.043785Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 3.0637292861938477, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.int_cobros_enriquecidos", "compiled": true, "compiled_code": "-- Modelo intermedio que enriquece los cobros con informaci\u00f3n de bancos y respuestas\n-- int_cobros_enriquecidos.sql\n\n\n\nWITH cobros AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"int_cobros_consolidados\"\n),\n\nbancos AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"stg_cat_banco\"\n),\n\nrespuestas AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"stg_cat_respuesta_bancos\"\n),\n\nlistas_cobro AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"stg_lista_cobro\"\n)\n\nSELECT\n    c.idListaCobro,\n    c.idCredito,\n    c.consecutivoCobro,\n    c.idBanco,\n    b.Nombre AS nombre_banco,\n    c.montoExigible,\n    c.montoCobrar,\n    c.montoCobrado,\n    c.fechaCobroBanco,\n    c.idRespuestaBanco,\n    r.Descripcion AS descripcion_respuesta,\n    l.fechaCreacionLista,\n    l.fechaEnvioCobro,\n    c.anio_origen,\n    -- Indicadores de \u00e9xito y eficiencia\nCASE WHEN c.idRespuestaBanco = '00' THEN 1 ELSE 0 END AS cobro_exitoso,\nCASE\n  WHEN c.montoCobrado > 0 AND c.montoCobrar != 0 THEN c.montoCobrado / c.montoCobrar\n  ELSE 0\nEND AS tasa_recuperacion,\nCASE\n  WHEN c.fechaCobroBanco IS NOT NULL AND l.fechaEnvioCobro IS NOT NULL THEN\n    DATEDIFF('day', l.fechaEnvioCobro, c.fechaCobroBanco)\n  ELSE NULL\nEND AS dias_hasta_cobro\n\nFROM cobros c\nLEFT JOIN bancos b ON c.idBanco = b.IdBanco\nLEFT JOIN respuestas r ON c.idRespuestaBanco = r.IdRespuestaBanco\nLEFT JOIN listas_cobro l ON c.idListaCobro = l.idListaCobro", "relation_name": "\"credifiel\".\"analytics\".\"int_cobros_enriquecidos\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:55.080618Z", "completed_at": "2025-05-25T13:30:55.089397Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:55.094560Z", "completed_at": "2025-05-25T13:30:55.665823Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.6194972991943359, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.mart_efectividad_bancos", "compiled": true, "compiled_code": "-- Modelo anal\u00edtico para an\u00e1lisis de efectividad por banco\n-- mart_efectividad_bancos.sql\n\n\n\nWITH cobros_enriquecidos AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"int_cobros_enriquecidos\"\n)\n\nSELECT\n    idBanco,\n    nombre_banco,\n    COUNT(*) AS total_intentos,\n    SUM(cobro_exitoso) AS total_exitosos,\n    SUM(cobro_exitoso)::FLOAT / COUNT(*) AS tasa_exito,\n    SUM(montoCobrado) AS monto_total_recuperado,\n    SUM(montoCobrar) AS monto_total_intentado,\n    SUM(montoCobrado)::FLOAT / NULLIF(SUM(montoCobrar), 0) AS tasa_recuperacion_monto,\n    AVG(CASE WHEN cobro_exitoso = 1 THEN dias_hasta_cobro END) AS promedio_dias_hasta_cobro,\n    -- An\u00e1lisis por a\u00f1o\n    SUM(CASE WHEN anio_origen = '2022' THEN cobro_exitoso ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN anio_origen = '2022' THEN 1 ELSE 0 END), 0) AS tasa_exito_2022,\n    SUM(CASE WHEN anio_origen = '2023' THEN cobro_exitoso ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN anio_origen = '2023' THEN 1 ELSE 0 END), 0) AS tasa_exito_2023,\n    SUM(CASE WHEN anio_origen = '2024' THEN cobro_exitoso ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN anio_origen = '2024' THEN 1 ELSE 0 END), 0) AS tasa_exito_2024,\n    SUM(CASE WHEN anio_origen = '2025' THEN cobro_exitoso ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN anio_origen = '2025' THEN 1 ELSE 0 END), 0) AS tasa_exito_2025\nFROM cobros_enriquecidos\nGROUP BY idBanco, nombre_banco\nORDER BY tasa_exito DESC", "relation_name": "\"credifiel\".\"analytics\".\"mart_efectividad_bancos\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:55.102232Z", "completed_at": "2025-05-25T13:30:55.115942Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:55.117678Z", "completed_at": "2025-05-25T13:30:56.109753Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.0776772499084473, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.mart_analisis_respuestas", "compiled": true, "compiled_code": "-- Modelo anal\u00edtico para an\u00e1lisis de respuestas de bancos\n-- mart_analisis_respuestas.sql\n\n\n\nWITH cobros_enriquecidos AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"int_cobros_enriquecidos\"\n)\n\nSELECT\n    idRespuestaBanco,\n    descripcion_respuesta,\n    COUNT(*) AS total_ocurrencias,\n    SUM(montoCobrar) AS monto_total_intentado,\n    SUM(montoCobrado) AS monto_total_recuperado,\n    SUM(montoCobrado)::FLOAT / NULLIF(SUM(montoCobrar), 0) AS tasa_recuperacion_monto,\n    -- Distribuci\u00f3n por banco\n    COUNT(DISTINCT idBanco) AS cantidad_bancos,\n    COUNT(DISTINCT idCredito) AS cantidad_clientes,\n    -- Tendencia temporal\n    SUM(CASE WHEN anio_origen = '2022' THEN 1 ELSE 0 END) AS ocurrencias_2022,\n    SUM(CASE WHEN anio_origen = '2023' THEN 1 ELSE 0 END) AS ocurrencias_2023,\n    SUM(CASE WHEN anio_origen = '2024' THEN 1 ELSE 0 END) AS ocurrencias_2024,\n    SUM(CASE WHEN anio_origen = '2025' THEN 1 ELSE 0 END) AS ocurrencias_2025,\n    -- Proporci\u00f3n de ocurrencias por a\u00f1o\n    SUM(CASE WHEN anio_origen = '2022' THEN 1 ELSE 0 END)::FLOAT /\n        NULLIF(COUNT(*), 0) AS proporcion_2022,\n    SUM(CASE WHEN anio_origen = '2023' THEN 1 ELSE 0 END)::FLOAT /\n        NULLIF(COUNT(*), 0) AS proporcion_2023,\n    SUM(CASE WHEN anio_origen = '2024' THEN 1 ELSE 0 END)::FLOAT /\n        NULLIF(COUNT(*), 0) AS proporcion_2024,\n    SUM(CASE WHEN anio_origen = '2025' THEN 1 ELSE 0 END)::FLOAT /\n        NULLIF(COUNT(*), 0) AS proporcion_2025\nFROM cobros_enriquecidos\nGROUP BY idRespuestaBanco, descripcion_respuesta\nORDER BY total_ocurrencias DESC", "relation_name": "\"credifiel\".\"analytics\".\"mart_analisis_respuestas\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:55.098805Z", "completed_at": "2025-05-25T13:30:55.110903Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:55.112453Z", "completed_at": "2025-05-25T13:30:56.327927Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.3798949718475342, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.mart_comportamiento_clientes", "compiled": true, "compiled_code": "-- Modelo anal\u00edtico para an\u00e1lisis de comportamiento de clientes\n-- mart_comportamiento_clientes.sql\n\n\n\nWITH cobros_enriquecidos AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"int_cobros_enriquecidos\"\n)\n\nSELECT\n    idCredito,\n    COUNT(*) AS total_intentos_cobro,\n    SUM(cobro_exitoso) AS total_cobros_exitosos,\n    SUM(cobro_exitoso)::FLOAT / COUNT(*) AS tasa_exito_cobros,\n    SUM(montoCobrado) AS monto_total_recuperado,\n    SUM(montoCobrar) AS monto_total_intentado,\n    SUM(montoCobrado)::FLOAT / NULLIF(SUM(montoCobrar), 0) AS tasa_recuperacion_monto,\n    MIN(CASE WHEN cobro_exitoso = 1 THEN fechaCobroBanco ELSE NULL END) AS fecha_primer_cobro_exitoso,\n    MAX(CASE WHEN cobro_exitoso = 1 THEN fechaCobroBanco ELSE NULL END) AS fecha_ultimo_cobro_exitoso,\n    COUNT(DISTINCT idBanco) AS cantidad_bancos_utilizados,\n    -- Patrones de respuesta\n    COUNT(DISTINCT idRespuestaBanco) AS cantidad_tipos_respuesta,\n    SUM(CASE WHEN idRespuestaBanco = '01' THEN 1 ELSE 0 END) AS cuenta_inexistente_count,\n    SUM(CASE WHEN idRespuestaBanco = '02' THEN 1 ELSE 0 END) AS cuenta_bloqueada_count,\n    SUM(CASE WHEN idRespuestaBanco = '03' THEN 1 ELSE 0 END) AS cuenta_cancelada_count,\n    -- Tendencia temporal\n    SUM(CASE WHEN anio_origen = '2022' THEN cobro_exitoso ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN anio_origen = '2022' THEN 1 ELSE 0 END), 0) AS tasa_exito_2022,\n    SUM(CASE WHEN anio_origen = '2023' THEN cobro_exitoso ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN anio_origen = '2023' THEN 1 ELSE 0 END), 0) AS tasa_exito_2023,\n    SUM(CASE WHEN anio_origen = '2024' THEN cobro_exitoso ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN anio_origen = '2024' THEN 1 ELSE 0 END), 0) AS tasa_exito_2024,\n    SUM(CASE WHEN anio_origen = '2025' THEN cobro_exitoso ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN anio_origen = '2025' THEN 1 ELSE 0 END), 0) AS tasa_exito_2025\nFROM cobros_enriquecidos\nGROUP BY idCredito", "relation_name": "\"credifiel\".\"analytics\".\"mart_comportamiento_clientes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:56.173201Z", "completed_at": "2025-05-25T13:30:56.182385Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:56.183354Z", "completed_at": "2025-05-25T13:30:59.075413Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 2.938002824783325, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.mart_optimizacion_costos", "compiled": true, "compiled_code": "-- Modelo anal\u00edtico para optimizaci\u00f3n de costos de comisiones\n-- mart_optimizacion_costos.sql\n\n\n\nWITH cobros_enriquecidos AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"int_cobros_enriquecidos\"\n),\n\n-- Obtener informaci\u00f3n de emisoras y bancos\nemisoras AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"stg_cat_emisora\"\n),\n\ntabla_maestra AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"stg_tabla_maestra_completa\"\n)\n\nSELECT\n    c.idBanco,\n    c.nombre_banco,\n    e.idEmisora,\n    e.Nombre AS nombre_emisora,\n    tm.tipo_servicio,\n    tm.canal_envio,\n    tm.tipo_envio,\n    tm.tipo_cobro,\n    tm.horario_carga,\n    tm.rango_cobro_banco,\n    -- M\u00e9tricas de efectividad\n    COUNT(*) AS total_intentos,\n    SUM(c.cobro_exitoso) AS total_exitosos,\n    SUM(c.cobro_exitoso)::FLOAT / NULLIF(COUNT(*), 0) AS tasa_exito,\n    SUM(c.montoCobrado) AS monto_recuperado,\n    SUM(c.montoCobrar) AS monto_intentado,\n    SUM(c.montoCobrado)::FLOAT / NULLIF(SUM(c.montoCobrar), 0) AS tasa_recuperacion_monto,\n    -- M\u00e9tricas de costo-beneficio (simuladas)\n    -- Nota: Aqu\u00ed asumimos un costo por intento basado en el tipo de servicio\n    -- En un entorno real, estos costos vendr\u00edan de una tabla de comisiones\n    CASE\n        WHEN tm.tipo_servicio = 'TRADICIONAL' THEN COUNT(*) * 2.5\n        WHEN tm.tipo_servicio = 'INTERBANCA' THEN COUNT(*) * 3.0\n        WHEN tm.tipo_servicio = 'PARCIAL' THEN COUNT(*) * 2.0\n        WHEN tm.tipo_servicio = 'MATUTINO' THEN COUNT(*) * 2.2\n        ELSE COUNT(*) * 2.5\n    END AS costo_total_comisiones,\n    -- Relaci\u00f3n costo-beneficio\n    CASE\n        WHEN tm.tipo_servicio = 'TRADICIONAL' THEN COUNT(*) * 2.5\n        WHEN tm.tipo_servicio = 'INTERBANCA' THEN COUNT(*) * 3.0\n        WHEN tm.tipo_servicio = 'PARCIAL' THEN COUNT(*) * 2.0\n        WHEN tm.tipo_servicio = 'MATUTINO' THEN COUNT(*) * 2.2\n        ELSE COUNT(*) * 2.5\n    END / NULLIF(SUM(c.montoCobrado), 0) AS costo_por_peso_recuperado,\n    -- \u00cdndice de eficiencia (mayor es mejor)\n    (SUM(c.montoCobrado) / NULLIF(\n        CASE\n            WHEN tm.tipo_servicio = 'TRADICIONAL' THEN COUNT(*) * 2.5\n            WHEN tm.tipo_servicio = 'INTERBANCA' THEN COUNT(*) * 3.0\n            WHEN tm.tipo_servicio = 'PARCIAL' THEN COUNT(*) * 2.0\n            WHEN tm.tipo_servicio = 'MATUTINO' THEN COUNT(*) * 2.2\n            ELSE COUNT(*) * 2.5\n        END, 0\n    )) AS indice_eficiencia\nFROM cobros_enriquecidos c\nLEFT JOIN emisoras e ON c.idBanco = e.IdBanco\nLEFT JOIN tabla_maestra tm ON c.idBanco = tm.idBanco AND e.idEmisora = tm.idEmisora\nGROUP BY\n    c.idBanco,\n    c.nombre_banco,\n    e.idEmisora,\n    e.Nombre,\n    tm.tipo_servicio,\n    tm.canal_envio,\n    tm.tipo_envio,\n    tm.tipo_cobro,\n    tm.horario_carga,\n    tm.rango_cobro_banco\nORDER BY indice_eficiencia DESC", "relation_name": "\"credifiel\".\"analytics\".\"mart_optimizacion_costos\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:55.091352Z", "completed_at": "2025-05-25T13:30:55.106211Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:55.106712Z", "completed_at": "2025-05-25T13:30:59.064009Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 4.030164003372192, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.int_secuencias_cobro", "compiled": true, "compiled_code": "-- Modelo intermedio para secuencias de cobro\n-- int_secuencias_cobro.sql\n\n\n\nSELECT\n    idCredito,\n    idBanco,\n    idRespuestaBanco,\n    fechaEnvioCobro,\n    ROW_NUMBER() OVER(PARTITION BY idCredito ORDER BY fechaEnvioCobro) AS intento_numero,\n    LEAD(idRespuestaBanco) OVER(PARTITION BY idCredito ORDER BY fechaEnvioCobro) AS siguiente_respuesta,\n    cobro_exitoso\nFROM \"credifiel\".\"analytics\".\"int_cobros_enriquecidos\"", "relation_name": "\"credifiel\".\"analytics\".\"int_secuencias_cobro\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-25T13:30:55.713446Z", "completed_at": "2025-05-25T13:30:55.728581Z"}, {"name": "execute", "started_at": "2025-05-25T13:30:55.729485Z", "completed_at": "2025-05-25T13:31:17.525131Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 21.86720108985901, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.credifiel.mart_maximizacion_cobranza", "compiled": true, "compiled_code": "-- Modelo anal\u00edtico para maximizaci\u00f3n de cobranza\n-- mart_maximizacion_cobranza.sql\n\n\n\nWITH cobros_enriquecidos AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"int_cobros_enriquecidos\"\n),\n\n-- Obtener informaci\u00f3n de emisoras y bancos\nemisoras AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"stg_cat_emisora\"\n),\n\ntabla_maestra AS (\n    SELECT * FROM \"credifiel\".\"analytics\".\"stg_tabla_maestra_completa\"\n),\n\n-- An\u00e1lisis de secuencias de cobro\nsecuencias_cobro AS (\n    SELECT\n        idCredito,\n        idBanco,\n        idRespuestaBanco,\n        fechaEnvioCobro,\n        ROW_NUMBER() OVER(PARTITION BY idCredito ORDER BY fechaEnvioCobro) AS intento_numero,\n        LEAD(idRespuestaBanco) OVER(PARTITION BY idCredito ORDER BY fechaEnvioCobro) AS siguiente_respuesta,\n        cobro_exitoso\n    FROM cobros_enriquecidos\n)\n\nSELECT\n    c.idBanco,\n    c.nombre_banco,\n    e.idEmisora,\n    e.Nombre AS nombre_emisora,\n    tm.tipo_servicio,\n    tm.canal_envio,\n    tm.tipo_envio,\n    tm.tipo_cobro,\n    tm.horario_carga,\n    tm.rango_cobro_banco,\n    -- M\u00e9tricas de efectividad para maximizaci\u00f3n\n    COUNT(*) AS total_intentos,\n    SUM(c.cobro_exitoso) AS total_exitosos,\n    SUM(c.cobro_exitoso)::FLOAT / NULLIF(COUNT(*), 0) AS tasa_exito,\n    SUM(c.montoCobrado) AS monto_recuperado,\n    SUM(c.montoCobrar) AS monto_intentado,\n    SUM(c.montoCobrado)::FLOAT / NULLIF(SUM(c.montoCobrar), 0) AS tasa_recuperacion_monto,\n    -- An\u00e1lisis de secuencias exitosas\n    SUM(CASE WHEN sc.intento_numero = 1 AND sc.cobro_exitoso = 1 THEN 1 ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN sc.intento_numero = 1 THEN 1 ELSE 0 END), 0) AS tasa_exito_primer_intento,\n    SUM(CASE WHEN sc.intento_numero > 1 AND sc.cobro_exitoso = 1 THEN 1 ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN sc.intento_numero > 1 THEN 1 ELSE 0 END), 0) AS tasa_exito_intentos_posteriores,\n    -- Probabilidad de \u00e9xito despu\u00e9s de cada tipo de respuesta\n    SUM(CASE WHEN sc.idRespuestaBanco = '01' AND sc.siguiente_respuesta = '00' THEN 1 ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN sc.idRespuestaBanco = '01' THEN 1 ELSE 0 END), 0) AS prob_exito_tras_cuenta_inexistente,\n    SUM(CASE WHEN sc.idRespuestaBanco = '02' AND sc.siguiente_respuesta = '00' THEN 1 ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN sc.idRespuestaBanco = '02' THEN 1 ELSE 0 END), 0) AS prob_exito_tras_cuenta_bloqueada,\n    SUM(CASE WHEN sc.idRespuestaBanco = '03' AND sc.siguiente_respuesta = '00' THEN 1 ELSE 0 END)::FLOAT /\n        NULLIF(SUM(CASE WHEN sc.idRespuestaBanco = '03' THEN 1 ELSE 0 END), 0) AS prob_exito_tras_cuenta_cancelada,\n    -- \u00cdndice de potencial de recuperaci\u00f3n (para maximizaci\u00f3n)\n    (SUM(c.cobro_exitoso)::FLOAT / NULLIF(COUNT(*), 0)) *\n    (SUM(c.montoCobrado)::FLOAT / NULLIF(SUM(c.montoCobrar), 0)) *\n    (CASE WHEN tm.tipo_cobro = 'TOTAL Y PARCIAL' THEN 1.2 ELSE 1.0 END) AS indice_potencial_recuperacion\nFROM cobros_enriquecidos c\nLEFT JOIN emisoras e ON c.idBanco = e.IdBanco\nLEFT JOIN tabla_maestra tm ON c.idBanco = tm.idBanco AND e.idEmisora = tm.idEmisora\nLEFT JOIN secuencias_cobro sc ON c.idCredito = sc.idCredito AND c.idBanco = sc.idBanco AND c.fechaEnvioCobro = sc.fechaEnvioCobro\nGROUP BY\n    c.idBanco,\n    c.nombre_banco,\n    e.idEmisora,\n    e.Nombre,\n    tm.tipo_servicio,\n    tm.canal_envio,\n    tm.tipo_envio,\n    tm.tipo_cobro,\n    tm.horario_carga,\n    tm.rango_cobro_banco\nORDER BY indice_potencial_recuperacion DESC", "relation_name": "\"credifiel\".\"analytics\".\"mart_maximizacion_cobranza\"", "batch_results": null}], "elapsed_time": 29.76421332359314, "args": {"invocation_command": "dbt run", "require_nested_cumulative_type_params": false, "send_anonymous_usage_stats": true, "which": "run", "log_path": "/home/carlitos/datathon/credifiel/logs", "show_resource_report": false, "favor_state": false, "printer_width": 80, "macro_debugging": false, "exclude": [], "static_parser": true, "partial_parse_file_diff": true, "log_format": "default", "write_json": true, "warn_error_options": {"include": [], "exclude": []}, "version_check": true, "indirect_selection": "eager", "log_level_file": "debug", "log_level": "info", "partial_parse": true, "print": true, "skip_nodes_if_on_run_start_fails": false, "log_format_file": "debug", "state_modified_compare_more_unrendered_values": false, "use_colors_file": true, "require_resource_names_without_spaces": false, "defer": false, "require_yaml_configuration_for_mf_time_spines": false, "use_colors": true, "populate_cache": true, "state_modified_compare_vars": false, "project_dir": "/home/carlitos/datathon/credifiel", "require_batched_execution_for_custom_microbatch_strategy": false, "require_explicit_package_overrides_for_builtin_materializations": true, "source_freshness_run_project_hooks": false, "strict_mode": false, "empty": false, "vars": {}, "cache_selected_only": false, "quiet": false, "select": [], "profiles_dir": "/home/carlitos/.dbt", "introspect": true, "log_file_max_bytes": 10485760}}